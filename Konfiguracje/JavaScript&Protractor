JAVA SCRIPT:
=> interakcja:
confirm("maciej kamela is awesome");
prompt("What is your name");
console.log("wyswietl to");
console.warn("uwaga cos sie wysypalo");
console.error("uwaga blad");
alert("Uwaga uwaga");
JavaScript can "display" data in different ways:
    Writing into an alert box, using window.alert().
    Writing into the HTML output using document.write().
    Writing into an HTML element, using innerHTML.
    Writing into the browser console, using console.log().
=> konkatenacja - "+": text1 + text2
=> typy danych: 
var length = 16;                               // Number
var lastName = "Johnson";                      // String
var cars = ["Saab", "Volvo", "BMW"];           // Array
var x = {firstName:"John", lastName:"Doe"};    // Object
var object ={
    firstName:"Maciej",
    lastName:"kamela",
    age:32};
console.log((object.lastName).toUpperCase());
=> tworzenie obiektÃ³w:
1. Using an Object Literal -> var obiekt = {
                                            firstName:"Maciej",
                                            lastName:"Kamela",
                                            age:32,
                                            fullName : function() {
                                            return this.firstName + " " + this.lastName;};
2.Using the JavaScript Keyword new ->  var obiekt =new person;
obiekt.firstName = "Maciej";
obiekt.lastName = "Kamela";
obiekt.age = 32;
3. Using an Object Constructor -> function person(first, last, age, eyecolor) {
    this.firstName = first;
    this.lastName = last;
    this.age = age;
    this.eyeColor = eyecolor;
    this.fullName = function() {
       return this.firstName + " " + this.lastName;
}
var myFather = new person("John", "Doe", 50, "blue");
myFather.fullName();
var myMother = new person("Sally", "Rally", 48, "green");


II. Back end
http://www.w3schools.com/xml/xml_parser.asp

var xhr = new XMLHttpRequest();
xhr.open("GET", "http://www.codecademy.com/", false);
xhr.send();
console.log(xhr.status);
console.log(xhr.statusText);
3. Funkcje
Jesli w definicji funckji byly tylko 3 parametry a w wywolaniu 4 to ten czwarty parametr zostanie przez JavaScript pominiety
przyklad:
function retriveInformation(when, where, who){
// do something here
}
retriveInformation("today", "poznan","me", "something extra);// extras are ignored
brak jakiegos z parametrow powoduj blad wykonania funkcji.
4. Tablice
- brak tablic asocjacyjnych w JS, aby stworzyc tablice z indeksem nazwanym trzeba stworzyc obiekt:
    var person = {firstName:"John", lastName:"Doe", age:46}; 
    console.log(person["firstName"]+person["lastName"]);// w cudzyslowach
    In JavaScript, arrays use numbered indexes.  
    In JavaScript, objects use named indexes.
- dodawanie elementow do tablicy:  var fruits = ["Banana", "Orange", "Apple", "Mango"];
    fruits[fruits.length] = "Lemon";     // adds a new element (Lemon) to fruits
    lub jako push method: fruits.push["kiwi"];
- reverse(): wyswietla elementy tablicy w odwrotnej kolejnosci
    var tablica = [1,2,3,4,5,6];
    var cos = tablica.reverse();
    console.log(cos);
- indexOf: zwraca pozycje na ktorej znajduje sie slowo: var cos = "maciej kamela mieszka sobnie w domku";
    var pos = cos.indexOf("ciej");
    console.log(pos);
- string methods: lastIndexOf,split, slice, indexOf, substring,substr,toLowerCase, toUpperCase,


