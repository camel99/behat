JAVA SCRIPT:
=> interakcja:
confirm("maciej kamela is awesome");
prompt("What is your name");
console.log("wyswietl to");
console.warn("uwaga cos sie wysypalo");
console.error("uwaga blad");
alert("Uwaga uwaga");
JavaScript can "display" data in different ways:
    Writing into an alert box, using window.alert().
    Writing into the HTML output using document.write().
    Writing into an HTML element, using innerHTML.
    Writing into the browser console, using console.log().
=> konkatenacja - "+": text1 + text2
=> typy danych: 
var length = 16;                               // Number
var lastName = "Johnson";                      // String
var cars = ["Saab", "Volvo", "BMW"];           // Array
var x = {firstName:"John", lastName:"Doe"};    // Object
var object ={
    firstName:"Maciej",
    lastName:"kamela",
    age:32};
console.log((object.lastName).toUpperCase());
=> tworzenie obiektÃ³w:
1. Using an Object Literal -> var obiekt = {
                                            firstName:"Maciej",
                                            lastName:"Kamela",
                                            age:32,
                                            fullName : function() {
                                            return this.firstName + " " + this.lastName;};
2.Using the JavaScript Keyword new ->  var obiekt =new person();
obiekt.firstName = "Maciej";
obiekt.lastName = "Kamela";
obiekt.age = 32;
3. Using an Object Constructor -> function person(first, last, age, eyecolor) {
    this.firstName = first;
    this.lastName = last;
    this.age = age;
    this.eyeColor = eyecolor;
    this.fullName = function() {
       return this.firstName + " " + this.lastName;
}
var myFather = new person("John", "Doe", 50, "blue");
myFather.fullName();
var myMother = new person("Sally", "Rally", 48, "green");


II. Back end
http://www.w3schools.com/xml/xml_parser.asp

var xhr = new XMLHttpRequest();
xhr.open("GET", "http://www.codecademy.com/", false);
xhr.send();
console.log(xhr.status);
console.log(xhr.statusText);
3. Funkcje
Jesli w definicji funckji byly tylko 3 parametry a w wywolaniu 4 to ten czwarty parametr zostanie przez JavaScript pominiety
przyklad:
function retriveInformation(when, where, who){
// do something here
}
retriveInformation("today", "poznan","me", "something extra);// extras are ignored
brak jakiegos z parametrow powoduj blad wykonania funkcji.
4. Tablice
- brak tablic asocjacyjnych w JS, aby stworzyc tablice z indeksem nazwanym trzeba stworzyc obiekt:
    var person = {firstName:"John", lastName:"Doe", age:46}; 
    console.log(person["firstName"]+person["lastName"]);// w cudzyslowach
    In JavaScript, arrays use numbered indexes.  
    In JavaScript, objects use named indexes.
- dodawanie elementow do tablicy:  var fruits = ["Banana", "Orange", "Apple", "Mango"];
    fruits[fruits.length] = "Lemon";     // adds a new element (Lemon) to fruits
    lub jako push method: fruits.push["kiwi"];
- reverse(): wyswietla elementy tablicy w odwrotnej kolejnosci
    var tablica = [1,2,3,4,5,6];
    var cos = tablica.reverse();
    console.log(cos);
- indexOf: zwraca pozycje na ktorej znajduje sie slowo: var cos = "maciej kamela mieszka sobnie w domku";
    var pos = cos.indexOf("ciej");
    console.log(pos);
- string methods: lastIndexOf,split, slice, indexOf, substring,substr,toLowerCase, toUpperCase,
- Date(): var today = Date(); var styczen2000_15 = Date(2000,0,15);-> miesiace zaczynaja sie od 0-11 czyli stycz=0, luty=1 itd.
- today.getMonth(); today.getFullYear();today.getDate();today.getDay();today.getTime();today.getHours();-> var mojeUrodziny = new Date(1983,05,9);
    console.log("urodzilem sie: ", mojeUrodziny.getDay());-> wynik to czwartek
- set date: today.setMonth(5);today.setFullYear(2012);today.setDay(5);
- compare Date: date1.getTime() == date2.getTime()
5.DOM
- myElement.getAttribute("align");
- myElement.setAttribute("align", "left");
var mojEelementNaStronie =document.getElementById("idElementu");
mojEelementNaStronie.setAttribute("align","left");
- innerHTML
- Create DOM elements:
var newHeading = document.createElement("h1");
var newParagraph = document.createElement("p");
// to add content, either use innerHTML
newHeading.innerHTML = "Did You Know?";
newParagraph.innerHTML = "California produces over 17 million gallons of wine each year!";
// OR create child nodes manually
var h1Text = document.createTextNode("Did You Know?");
var paraText = document.createTextNode("California produces over 17 million gallons of wine each year!");
// and add them as child nodes to the new elements
newHeading.appendChild(h1Text);
newParagraph.appendChild(paraText);
// and we still need to attach them to the document!
document.getElementById("trivia").appendChild(newHeading);
document.getElementById("trivia").appendChild(newParagraph);
6.Events
- onfocus, onblur,onchange,onkeypress,onkeydown,onkeyup
    myElement.onclick = function () {
    // do sth
    }; // wazne zeby byl na koncu srednik tak jak przy zwyklym przypisaniu var x =5;
    window.onload = functio () {
    // do sth
    };
    
    var emailField = document.getElementById("email");
emailField.onfocus = function() {
	if ( emailField.value == "your email") {
		emailField.value = "";
	}
};
emailField.onblur = function() {
	if ( emailField.value == "") {
		emailField.value = "your email";
	}
};
- dropdown lists
mySelect.type - tu moze byc select one or select multiple, wybiaramy jedna opcje z listy lub wiele
mySelect.selectIndex - jesli jest tylko jedna opcja mozliwa do wybrania
mySelect.options[x].selected - gdzie "x" to numer indesku w tablicy (kazdy element na liscie ma indeks 0,1,2...)
- onsubmit 
